from langchain_google_genai import GoogleGenerativeAI
from langchain.prompts import PromptTemplate
import dotenv
import os

# завантажити api ключі з папки .env
dotenv.load_dotenv()

# отримати сам ключ
api_key = os.getenv('GEMINI_API_KEY')

# створення моделі

llm = GoogleGenerativeAI(
    model='gemini-2.0-flash',  # назва моделі
    google_api_key=api_key,  # ваша API
)

# ############################################################
# _________ HOMEWORK 2 - ЗРОБЛЕНО
# МЕТА ЗАВДАННЯ: створити промт для пошуку адрес сайтів відомих наукових медичних та ботанічних видань
# для подальшої роботи з інформацією на цих сайтах.
# Зробив Few-shot
# Zero-shot не робив, у звязку з простотою та недоцільністю для задачі
##############################################################


# with open("sourse.dat", "r", encoding="UTF-8") as file:
#     sourse = file.read()
#
# # складові промпта
# # Хто ти
# # базові інструкції(пару речень що треба робити)
# # додаткова інформація
# # Деталізація(що робити в певних ситуація)
# # Приклади
# # дані від самого користувача
# promt = PromptTemplate.from_template(""" Ти асистент з пошуку інформації в мережі інтернет.
# Твоя задача знайти адреси сайтів відомих наукових медичних та ботанічних видань та вивести їх в потрібному форматі: адреса - назва.
# Назви видань знаходиться в документі.
# Якщо знайшов декілька адрес, то зазначати потрібно адресу де публікуються статті.
#
# ПРИКЛАД:
# Назва видання: PNAS: Proceedings of the National Academy of Sciences
# Результат: https://www.pnas.org/ - PNAS: Proceedings of the National Academy of Sciences
#
# Якщо адресу сайту не знайшов формат відповіді наступний:
# "АДРЕСА НЕ ЗНАЙДЕНА - назва видання"
#
# Документ з назвами наукових видань: {sourse}
# """)
#
# chain = promt | llm
#
# result = chain.invoke({'sourse': sourse})
#
# with open("sourse2.dat", "w", encoding="utf-8") as file:
#     file.write(result)
#
# print(result)

# ###################################################
# _________ продовження HOMEWORK 3 - В ПРОЦЕССІ
# МЕТА: проаналізувати сайти на предмет:
# *- чи є вільний доступ до ВСІХ статей сайту
# *- до якої категорії відноситься сайт (медицина, ботаніка, суміжні науки)
# *- чи публікуються статті про цікавлячу тему:
#   *- отримати від користувача ключове слово
#   *- підібрати 5 споріднених термінів до ключового слова
#   *- провести аналіз КОЖНОГО САЙТУ ОКРЕМО на предмет наявності інформації по ключовим словам та їх аналогам
# *- сформувати (перевірити відповідність нового переліку - старому) та зберегти у файл список актуальних джерел
# ###################################################

with open("sourse2.dat", "r", encoding="UTF-8") as file:
    sourse = file.read()


# promt = PromptTemplate.from_template(""" Ти асистент з пошуку інформації в мережі інтернет.
# Твоя задача проаналізувати сайти відомих наукових медичних та ботанічних видань та розподілити по категоріям: медицина або ботаніка.
# Проаналізуй сайт кожного видання та визнач чи є безкоштовний доступ до ВСІХ статей.
# Адреси видань знаходиться в документі.
# Також тобі необхідно:
# ** підібрати 5 найбільшрелевантних аналога до ключового слова {key}
# ** використовуючи пошукові форми сайтів знайти **усі опубліковані за місяць статті** які повязані з ключовим словом та підібраними релевантними аналогами.
#
# Документ з назвами наукових видань: {sourse}
#
# Ключове слово: {key}
#
# ПРИКЛАД:
# Назва видання: https://www.pnas.org/
# Результат: https://www.pnas.org/ - PNAS: Proceedings of the National Academy of Sciences, статі за останній рік, повязані з {key}:
# - https://www.pnas.org/doi/10.1073/pnas.2413409121 - Функціональні зміни магноцелюлярного підрозділу зорово-сенсорного таламуса при аутизмі
#
# Якщо на сайті немає за останній рік публікацій, повязаних {key} - формат результату має бути таким:
# "АДРЕСА САЙТУ - статтей з ключовим словом {key} НЕНАЙДЕНО"

# Якщо доступ до всіх статей платний чи якось обмежений в рещультаті зазначай як саме обмежений (наприклад - платна підписка)
# і які є можливості безкощтовного доступу (наприклад - безкоштовний доступ тільки до статей які нещодавно опубліковані)

#
# """)
#
# with open("sourse2.dat", "r", encoding="UTF-8") as file:
#     sourse2 = file.read()
#
# key = 'autism spectrum disorder'
#
#
# chain = promt | llm
#
# result = chain.invoke({'sourse': sourse2, 'key': key})
#
# with open("sourse3.dat", "w", encoding="utf-8") as file:
#     file.write(result)
#
# print(result)

